-- 1. Как получить в виде результата все поля из таблицы my_table?

SELECT * FROM my_table

-- 2. Как получить в виде результата только поля name_first, name_last, salary из таблицы employee?

SELECT name_first, name_last, salary FROM employee

-- 3. Задать таблице my_table псевдоним t и вывести всех, у кого salary выше 3800.

SELECT * FROM super_table AS t WHERE t.salary>3800

-- 4. Так выбрать страны, из которых поставляют продукцию производители, чтобы страны не повторялись по 2 и более раз.

SELECT DISTINCT country FROM manufacturers

-- 5. Вывести все автобусы в порядке уменьшения количества мест.

SELECT * FROM buses ORDER BY seats DESC

-- 6. Перечислить известные агрегирующие функции в MySQL.

AVG: вычисляет среднее значение

SUM: вычисляет сумму значений

MIN: вычисляет наименьшее значение

MAX: вычисляет наибольшее значение

COUNT: вычисляет количество строк в запросе

-- 7. Есть таблица с полями name и id. Нужно вывести имя с наибольшим id, не используя при этом команду MAX.
-- Как это можно сделать?

SELECT name, id FROM customers ORDER BY id DESC LIMIT 1

-- 8. Обязательно ли писать команды прописными буквами? Сработает ли запрос, если его написать строчными буквами?

-- Работать будет, т.к. команды MySQL регистронезависимы. Но, тем не менее, команды традиционно принято писать
-- прописными буквами для удобства чтения запроса.

-- 9. Что такое SQL-инъекции и как их избегать?

-- SQL-инъекцией называется отправка вредоносных команд в базу данных, пробираясь через несанкционированные каналы.
-- Данные команды поступают из пользовательского ввода, который не был проверен на вредоносность на стороне сервера.

-- Для того, чтобы избежать SQL-инъекций в PHP есть специальные функций для работы со строками:

-- strip_tags() – вырезает теги HTML и PHP из строки.

-- htmlspecialchars() – конвертирует только специальные символы (’&’, ‘”‘, ”’, ‘<’ и ‘>’)
-- в HTML сущности (’&amp;’, ‘&quot;’…).
-- Используется для фильтрации вводимых пользователем данных для защиты от XSS-атак.

-- htmlentities() – конвертирует все символы в строке (кроме букв) в мнемоники HTML. Используется для защиты от XSS,
-- являясь более гибким аналогом htmlspecialchars.

-- stripslashes() – удаляет заэкранированные символы (после преобразования в сущности предыдущими функциями их незачем
-- экранировать). Обычно используется в связке с проверочной функцией get_magic_quotes_gpc(), показывающей текущую
-- установку конфигурации magic_quotes_gpc. Эта конфигурация влияет на то, как будут обрабатываться специальные символы,
-- содержащиеся в данных, передаваемых пользователем (массивы $_GET, $_POST, $_COOKIE). При magic_quotes_gpc = 1
-- эти спецсимволы (одиночные и двойные кавычки, обратный слэш, байт NULL) автоматически экранируются.
-- При magic_quotes_gpc = 0 все данные передаются в таком виде, в каком их ввел пользователь.
-- В последнем случае в целях безопасности требуется обрабатывать передаваемые данные.

-- mysql_real_escape_string – мнемонизирует специальные символы в строке для использования в операторе SQL с учётом
-- текущего набора символов в кодировке соединения. Иными словами, функция превращает любую строку в правильную
-- и безопасную для MySQL-запроса. Используется для очистки всех данных, передающихся в MySQL-запрос для защиты от SQL-инъекций.

